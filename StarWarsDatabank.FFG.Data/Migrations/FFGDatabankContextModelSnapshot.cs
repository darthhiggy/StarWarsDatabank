// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarWarsDatabank.FFG.Data;

namespace StarWarsDatabank.FFG.Data.Migrations
{
    [DbContext(typeof(FFGDatabankContext))]
    partial class FFGDatabankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArmorArmorQuality", b =>
                {
                    b.Property<int>("ArmorsAggregateId")
                        .HasColumnType("int");

                    b.Property<int>("QualitiesEntityId")
                        .HasColumnType("int");

                    b.HasKey("ArmorsAggregateId", "QualitiesEntityId");

                    b.HasIndex("QualitiesEntityId");

                    b.ToTable("ArmorArmorQualities");
                });

            modelBuilder.Entity("StarWarsDatabank.Framework.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameVersionId")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("GameVersionId");

                    b.ToTable("Books", "Books");
                });

            modelBuilder.Entity("StarWarsDatabank.Framework.GameVersion", b =>
                {
                    b.Property<int>("GameVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("GameVersionId");

                    b.ToTable("GamerVersions", "Books");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Armor.Armor", b =>
                {
                    b.Property<int>("AggregateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryEntityId")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Encumberance")
                        .HasColumnType("int");

                    b.Property<int>("HardPoints")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<int>("Soak")
                        .HasColumnType("int");

                    b.Property<string>("Speical")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AggregateId");

                    b.HasIndex("CategoryEntityId");

                    b.ToTable("Armor", "Items");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Armor.ArmorCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("ArmorCategories", "Items");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Armor.ArmorQuality", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("ArmorQualities", "Items");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.GearAndEquipment.Gear", b =>
                {
                    b.Property<int>("AggregateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Encumberance")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<string>("Special")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AggregateId");

                    b.HasIndex("CategoryEntityId");

                    b.ToTable("Gear", "Items");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.GearAndEquipment.GearCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("GearCategories", "Items");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Mods.Mod", b =>
                {
                    b.Property<int>("AggregateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseModifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Encumberance")
                        .HasColumnType("float");

                    b.Property<string>("FurtherMods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HardPoints")
                        .HasColumnType("int");

                    b.Property<bool>("IsRestricted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<int?>("TypeEntityId")
                        .HasColumnType("int");

                    b.HasKey("AggregateId");

                    b.HasIndex("TypeEntityId");

                    b.ToTable("Mods", "Items");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Mods.ModType", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("ModTypes", "Items");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Weapons.Weapon", b =>
                {
                    b.Property<int>("AggregateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AddAbilityScoreToDamage")
                        .HasColumnType("bit");

                    b.Property<int>("CombatSkillId")
                        .HasColumnType("int");

                    b.Property<int>("Critical")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Encumberance")
                        .HasColumnType("float");

                    b.Property<int>("HardPoints")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<bool>("Restricted")
                        .HasColumnType("bit");

                    b.HasKey("AggregateId");

                    b.HasIndex("CombatSkillId");

                    b.ToTable("Weapons", "Items");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Weapons.WeaponCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("WeaponCategories", "Items");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Weapons.WeaponQuality", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("WeaponQualities", "Items");
                });

            modelBuilder.Entity("StarWarsDatabank.Skills.FFG.Domain.AggregatesModel.CombatSkills.CombatSkill", b =>
                {
                    b.Property<int>("AggregateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Characteristic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AggregateId");

                    b.ToTable("CombatSkills", "Skills");
                });

            modelBuilder.Entity("StarWarsDatabank.Skills.FFG.Domain.AggregatesModel.GeneralSkills.GeneralSkill", b =>
                {
                    b.Property<int>("AggregateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Characteristic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AggregateId");

                    b.ToTable("GeneralSkills", "Skills");
                });

            modelBuilder.Entity("StarWarsDatabank.Skills.FFG.Domain.AggregatesModel.KnowledgeSkills.KnowledgeSkill", b =>
                {
                    b.Property<int>("AggregateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Characteristic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AggregateId");

                    b.ToTable("KnowledgeSkills", "Skills");
                });

            modelBuilder.Entity("StarWarsDatabank.Talents.FFG.Domain.AggregatesModel.Talent", b =>
                {
                    b.Property<int>("AggregateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivationEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<bool>("Ranked")
                        .HasColumnType("bit");

                    b.HasKey("AggregateId");

                    b.HasIndex("ActivationEntityId");

                    b.ToTable("Talents", "Talent");
                });

            modelBuilder.Entity("StarWarsDatabank.Talents.FFG.Domain.AggregatesModel.TalentActivation", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("TalentActivations", "Talent");
                });

            modelBuilder.Entity("WeaponWeaponQuality", b =>
                {
                    b.Property<int>("QualitiesEntityId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponsAggregateId")
                        .HasColumnType("int");

                    b.HasKey("QualitiesEntityId", "WeaponsAggregateId");

                    b.HasIndex("WeaponsAggregateId");

                    b.ToTable("WeaponWeaponQuality");
                });

            modelBuilder.Entity("ArmorArmorQuality", b =>
                {
                    b.HasOne("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Armor.Armor", null)
                        .WithMany()
                        .HasForeignKey("ArmorsAggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Armor.ArmorQuality", null)
                        .WithMany()
                        .HasForeignKey("QualitiesEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StarWarsDatabank.Framework.Book", b =>
                {
                    b.HasOne("StarWarsDatabank.Framework.GameVersion", "RPG")
                        .WithMany()
                        .HasForeignKey("GameVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RPG");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Armor.Armor", b =>
                {
                    b.HasOne("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Armor.ArmorCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryEntityId");

                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("ArmorId")
                                .HasColumnType("int");

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookId");

                            b1.HasIndex("ArmorId");

                            b1.ToTable("Armor_Books");

                            b1.WithOwner()
                                .HasForeignKey("ArmorId");
                        });

                    b.Navigation("Books");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Armor.ArmorCategory", b =>
                {
                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("ArmorCategoryId")
                                .HasColumnType("int");

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookId");

                            b1.HasIndex("ArmorCategoryId");

                            b1.ToTable("ArmorCategories_Books");

                            b1.WithOwner()
                                .HasForeignKey("ArmorCategoryId");
                        });

                    b.Navigation("Books");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Armor.ArmorQuality", b =>
                {
                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("ArmorQualityId")
                                .HasColumnType("int");

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookId");

                            b1.HasIndex("ArmorQualityId");

                            b1.ToTable("ArmorQualities_Books");

                            b1.WithOwner()
                                .HasForeignKey("ArmorQualityId");
                        });

                    b.Navigation("Books");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.GearAndEquipment.Gear", b =>
                {
                    b.HasOne("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.GearAndEquipment.GearCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryEntityId");

                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("GearId")
                                .HasColumnType("int");

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookId");

                            b1.HasIndex("GearId");

                            b1.ToTable("Gear_Books");

                            b1.WithOwner()
                                .HasForeignKey("GearId");
                        });

                    b.Navigation("Books");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.GearAndEquipment.GearCategory", b =>
                {
                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("GearCategoryId")
                                .HasColumnType("int");

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookId");

                            b1.HasIndex("GearCategoryId");

                            b1.ToTable("GearCategories_Books");

                            b1.WithOwner()
                                .HasForeignKey("GearCategoryId");
                        });

                    b.Navigation("Books");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Mods.Mod", b =>
                {
                    b.HasOne("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Mods.ModType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeEntityId");

                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("ModId")
                                .HasColumnType("int");

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookId");

                            b1.HasIndex("ModId");

                            b1.ToTable("Mods_Books");

                            b1.WithOwner()
                                .HasForeignKey("ModId");
                        });

                    b.Navigation("Books");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Mods.ModType", b =>
                {
                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("ModTypesId")
                                .HasColumnType("int");

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookId");

                            b1.HasIndex("ModTypesId");

                            b1.ToTable("ModTypes_Books");

                            b1.WithOwner()
                                .HasForeignKey("ModTypesId");
                        });

                    b.Navigation("Books");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Weapons.Weapon", b =>
                {
                    b.HasOne("StarWarsDatabank.Skills.FFG.Domain.AggregatesModel.CombatSkills.CombatSkill", "Skill")
                        .WithMany()
                        .HasForeignKey("CombatSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("WeaponId")
                                .HasColumnType("int");

                            b1.HasKey("BookId");

                            b1.HasIndex("WeaponId");

                            b1.ToTable("Weapons_Books");

                            b1.WithOwner()
                                .HasForeignKey("WeaponId");
                        });

                    b.Navigation("Books");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Weapons.WeaponCategory", b =>
                {
                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("WeaponCategoryId")
                                .HasColumnType("int");

                            b1.HasKey("BookId");

                            b1.HasIndex("WeaponCategoryId");

                            b1.ToTable("WeaponCategories_Books");

                            b1.WithOwner()
                                .HasForeignKey("WeaponCategoryId");
                        });

                    b.Navigation("Books");
                });

            modelBuilder.Entity("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Weapons.WeaponQuality", b =>
                {
                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("WeaponQualityId")
                                .HasColumnType("int");

                            b1.HasKey("BookId");

                            b1.HasIndex("WeaponQualityId");

                            b1.ToTable("WeaponQualities_Books");

                            b1.WithOwner()
                                .HasForeignKey("WeaponQualityId");
                        });

                    b.Navigation("Books");
                });

            modelBuilder.Entity("StarWarsDatabank.Skills.FFG.Domain.AggregatesModel.CombatSkills.CombatSkill", b =>
                {
                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CombatSkillId")
                                .HasColumnType("int");

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookId");

                            b1.HasIndex("CombatSkillId");

                            b1.ToTable("CombatSkills_Books");

                            b1.WithOwner()
                                .HasForeignKey("CombatSkillId");
                        });

                    b.Navigation("Books");
                });

            modelBuilder.Entity("StarWarsDatabank.Skills.FFG.Domain.AggregatesModel.GeneralSkills.GeneralSkill", b =>
                {
                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("GeneralSkillId")
                                .HasColumnType("int");

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookId");

                            b1.HasIndex("GeneralSkillId");

                            b1.ToTable("GeneralSkills_Books");

                            b1.WithOwner()
                                .HasForeignKey("GeneralSkillId");
                        });

                    b.Navigation("Books");
                });

            modelBuilder.Entity("StarWarsDatabank.Skills.FFG.Domain.AggregatesModel.KnowledgeSkills.KnowledgeSkill", b =>
                {
                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("KnowledgeSkillId")
                                .HasColumnType("int");

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BookId");

                            b1.HasIndex("KnowledgeSkillId");

                            b1.ToTable("KnowledgeSkills_Books");

                            b1.WithOwner()
                                .HasForeignKey("KnowledgeSkillId");
                        });

                    b.Navigation("Books");
                });

            modelBuilder.Entity("StarWarsDatabank.Talents.FFG.Domain.AggregatesModel.Talent", b =>
                {
                    b.HasOne("StarWarsDatabank.Talents.FFG.Domain.AggregatesModel.TalentActivation", "Activation")
                        .WithMany()
                        .HasForeignKey("ActivationEntityId");

                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("TalentActivationId")
                                .HasColumnType("int");

                            b1.HasKey("BookId");

                            b1.HasIndex("TalentActivationId");

                            b1.ToTable("Talents_Books");

                            b1.WithOwner()
                                .HasForeignKey("TalentActivationId");
                        });

                    b.Navigation("Activation");

                    b.Navigation("Books");
                });

            modelBuilder.Entity("StarWarsDatabank.Talents.FFG.Domain.AggregatesModel.TalentActivation", b =>
                {
                    b.OwnsMany("StarWarsDatabank.Framework.DomainFramework.BookReference", "Books", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("PageNumber")
                                .HasColumnType("int");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("TalentActivationId")
                                .HasColumnType("int");

                            b1.HasKey("BookId");

                            b1.HasIndex("TalentActivationId");

                            b1.ToTable("TalentActivations_Books");

                            b1.WithOwner()
                                .HasForeignKey("TalentActivationId");
                        });

                    b.Navigation("Books");
                });

            modelBuilder.Entity("WeaponWeaponQuality", b =>
                {
                    b.HasOne("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Weapons.WeaponQuality", null)
                        .WithMany()
                        .HasForeignKey("QualitiesEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarWarsDatabank.Items.FFG.Domain.AggregatesModel.Weapons.Weapon", null)
                        .WithMany()
                        .HasForeignKey("WeaponsAggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
